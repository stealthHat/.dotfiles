#!/bin/bash

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

export VIM_PLUG="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
export GIT_DIR="$HOME/git"

installpkg(){ sudo pacman --noconfirm --needed -S "$1" ;}
aurinstall(){ yay --noconfirm --needed -S "$1" ;}
echostep(){ echo "############################################################  $1   ################################################################" ;}

# Set the best mirrors for my country
mirror_settings () {
  echostep "SETTING MIRROR LIST"
  sudo pacman -Syu --noconfirm
  installpkg reflector
  grep -q "reflector -c brazil" /etc/pacman.d/mirrorlist || sudo reflector -c brazil -a 6 --sort rate --save /etc/pacman.d/mirrorlist
}

# Install the base packages and create the user folders
basepkgs () {
  echostep "BASE PACKAGES INSTALL"
  for x in curl base-devel git xdg-utils xdg-user-dirs; do
  	installpkg "$x"
  done
  xdg-user-dirs-update
}

# Makes pacman pretty
pacman_config () { 
  echostep "PACMAN CONFIG SETTINGS"
  grep -q "^Color" /etc/pacman.conf || sudo sed -i "s/^#Color$/Color/" /etc/pacman.conf
  grep -q "ILoveCandy" /etc/pacman.conf || sudo sed -i "/#VerbosePkgLists/a ILoveCandy" /etc/pacman.conf
}


# Create all the folder structure of my .dotfiles/home and make symbolic links of all files of it to my $HOME directory
setup_links () {
  echostep "FOLDERS AND SYMBOLIC LINKS FOR DOTFILES"
  local dot_home=$HOME/git/.dotfiles/home/

  pushd "$dot_home" || exit
  find "$dot_home" -type d -links 2 | sed 's/^.*\.config/\.config/;s/^.*\.local/\.local/' | xargs -I % mkdir -pv "$HOME/%"
  find . -type f -exec ln -sfv "$(pwd)"/{} "$HOME"/{} \;
  popd || exit

  source $HOME/.zprofile
}

# Install yay
setup_yay () {
  echostep "INSTALLING YAY"
  [ -d "$HOME"/git/yay ] || git clone https://aur.archlinux.org/yay.git "$GIT_DIR"/yay
  pushd "$GIT_DIR"/yay && makepkg -si PKGBUILD --noconfirm
  popd || exit
}

# Add the pacman and yay keys 
pacman_keys () {
  echostep "PACMAN KEYS BEING ADDED"
  pacman -Q arch-keyring >/dev/null 2>&1 && pacman --noconfirm -S archlinux-keyring >/dev/null 2>&1
	pacman --noconfirm -S archlinux-keyring >/dev/null 2>&1
}

# Install all the programs listed on .dotfiles/install/progs.csv
install_loop () {
  echostep "INSTALLING PROGRAMS FROM progs.csv FILE"
  while IFS=, read -r tag program comment; do 
    [[ "$tag" =~ ^#.*$ ]] && continue
    case "$tag" in
			"A") aurinstall "$program" ;;
			*) installpkg "$program" ;;
		esac
  done < "$HOME"/git/.dotfiles/install/progs.csv 
}

# Install Oh-my-zsh
setup_zsh () {
  echostep "INSTALLING OH-MY-ZSH"
  export ZSH=$HOME/.config/zsh/.oh-my-zsh 
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh) --unattended"
  antibody init && antibody update || exit
}

# Install vim plugin manager  
vimplug_install () {
  [ -f "$XDG_DATA_HOME"/nvim/site/autoload/plug.vim ] ||  sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs $VIM_PLUG'
}

# Install rvm
rvm_install () { 
  unset GEM_HOME
  gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
  [ -f "$XDG_DATA_HOME"/rvm/bin/rvm ] || curl -sSL https://get.rvm.io | bash -s stable --ruby --with-gems="neovim" --ignore-dotfiles --path "$XDG_DATA_HOME"/rvm 
}

# Set up neovim dependencies 
setup_vim () {
  echostep "INSTALLING VIM_PLUG AND VIM DEPENDENCIES"
  vimplug_install
  rvm_install
  # configure NVM
  source /usr/share/nvm/init-nvm.sh
  npm config set cache "$XDG_CACHE_HOME" --global 
  nvm install node
  npm i -g neovim
}

# Install tmux plugin manager
tmux_plug () {
  echostep "INSTALLING TMUX_PLUG"
  [ -d "$XDG_CONFIG_HOME"/tmux/plugins ] || git clone https://github.com/tmux-plugins/tpm "$XDG_CONFIG_HOME"/tmux/plugins/tpm
}

# Install DWM, DWM Bocks and menu 
dwm_tools () {
  echostep "INSTALLING DWM TOOLS"
  local mk="sudo make clean install"
  pushd "$GIT_DIR" || exit
  [ -d "$GIT_DIR"/dwm ] || git clone https://github.com/LukeSmithxyz/dwm.git 
  [ -d "$GIT_DIR"/dmenu ] || git clone https://git.suckless.org/dmenu
  [ -d "$GIT_DIR"/dwmblocks ] || git clone https://github.com/LukeSmithxyz/dwmblocks.git 
  pushd dwm && $mk && popd  || exit
  pushd dmenu && $mk && popd  || exit
  pushd dwmblocks && $mk && popd || exit 
  popd || exit
}

# Clean up home after install
clean_up () {
  echostep "CLEANING UP"
  cd "$HOME" || exit 
  rm -rf .bash* .rvmrc .mkshrc .profile .shell.pre-oh-my-zsh .zcompdump* .zlogin .zshrc .zsh_history .Xauthority &> /dev/null
  rm -rf "$GIT_DIR"/.dotfiles/home/.config/zsh/.zlogin &> /dev/null
  sudo reboot now
}

# Call all the functions 
mirror_settings && basepkgs && pacman_config && setup_links && pacman_keys && setup_yay && install_loop && setup_zsh && setup_vim && tmux_plug && dwm_tools && clean_up || exit 
