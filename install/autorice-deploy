#!/bin/bash

export VIM_PLUG="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
export FGIT="$HOME/git"

installpkg(){ sudo pacman --noconfirm --needed -S "$1" ;}
aurinstall(){ yay --noconfirm --needed  -S "$1" ;}
echostep () { echo "############################################################  $1   ################################################################" ;}

# Set the best mirros for my country
mirror_settings () {
  echostep "SETTING MIRROR LIST"
  installpkg reflector
  grep -q "reflector -c brazil" || sudo reflector -c brazil -a 6 --sort rate --save /etc/pacman.d/mirrorlist
  sudo pacman -Syu
}

basepkgs () {
  echostep "BASE PACKAGES INSTALL"
  for x in curl base-devel git xdg-user-dirs; do
  	installpkg "$x"
  done
  xdg-user-dirs-update
}

pacman_config () { 
  echostep "PACMAN CONFIG SETTINGS"
  grep -q "^Color" /etc/pacman.conf || sudo sed -i "s/^#Color$/Color/" /etc/pacman.conf
  grep -q "ILoveCandy" /etc/pacman.conf || sudo sed -i "/#VerbosePkgLists/a ILoveCandy" /etc/pacman.conf
}


setup_links () {
  echostep "FOLDERS AND SYMBOLIC LINKS FOR DOTFILES"
  local dot_home=$HOME/git/.dotfiles/home/

  pushd $dot_home
  find $dot_home -type d -links 2 | sed 's/^.*\.config/\.config/;s/^.*\.local/\.local/' | xargs -I % mkdir -pv "$HOME/%"
  find . -type f -exec ln -sfv `pwd`/{} $HOME/{} \;
  popd

  source $HOME/.zprofile
}

pacman_keys () {
  echostep "PACMAN KEYS BEING ADDED"
  pacman -Q arch-keyring >/dev/null 2>&1 && pacman --noconfirm -S archlinux-keyring >/dev/null 2>&1
	pacman --noconfirm -S archlinux-keyring >/dev/null 2>&1
}

setup_yay () {
  echostep "INSTALLING YAY"
  [ -d $HOME/git/yay ] || git clone https://aur.archlinux.org/yay.git $FGIT/yay
  pushd $HOME/git/yay && makepkg -si PKGBUILD --noconfirm
  popd
}

install_loop () {
  echostep "INSTALLING PROGRAMS FROM progs.csv FILE"
  export NVM_DIR="$XDG_DATA_HOME"/nvm
  while IFS=, read -r tag program comment; do 
    [[ "$tag" =~ ^#.*$ ]] && continue
    case "$tag" in
			"A") aurinstall "$program" ;;
			*) installpkg "$program" ;;
		esac
  done < $HOME/git/.dotfiles/install/progs.csv 
}

setup_zsh () {
  echostep "INSTALLING OH-MY-ZSH"
  export ZSH=$HOME/.config/zsh/.oh-my-zsh 
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" 
  chsh -s $(which zsh) 
}

setup_vim() {
  echostep "INSTALLING VIM_PLUG AND VIM DEPENDENCIES"
  # Install  neovim plugin mannager 
  [ -d $HOME/.local/share/nvim ] || curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dir\
  $VIM_PLUG
  #install RVM
  gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
  curl -sSL https://get.rvm.io | bash -s -- --path $XDG_CONFIG_HOME/rvm
  rvm install ruby
  rvm use ruby --default
  gem install neovim 
  # Install NVM
  npm config set cache $XDG_CACHE_HOME --global 
  nvm install node
  npm i -g neovim
}

tmux_plug () {
  echostep "INSTALLING TMUX_PLUG"
  git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm
}


dwm_tools () {
  echostep "INSTALLING DWM TOOLS"
  local mk="sudo make clean install"
  [ -d $HOME/git/dwm ] || git clone https://github.com/LukeSmithxyz/dwm.git $FGIT/dwm
  [ -d $HOME/git/dmenu ] || git clone https://git.suckless.org/dmenu $FGIT/dmenu
  [ -d $HOME/git/dwmblocks ] || git clone https://github.com/LukeSmithxyz/dwmblocks.git $FGIT/dwmblocks
  pushd dwm && $mk
  popd 
  pushd dmenu && $mk
  popd 
  pushd dwmblocks && $mk
  popd
}

setup_mouse () {
  echostep "MOUSE CONFIGS"
  echo "options psmouse synaptics_intertouch=1" >> /etc/modprobe.d/psmouse.conf
}

clean_up () {
  echostep "CLEANING UP"
  cd $HOME
  rm -rf .bash* .mkshrc .profile .shell.pre-oh-my-zsh .zcompdump* .zlogin .zshrc .zsh_history .Xauthority &> /dev/null
  rm -rf $HOME/git/.dotfiles/home/.config/zsh/.zlogin &> /dev/null
}

mirror_settings && basepkgs && pacman_config && setup_links && pacman_keys && setup_yay && install_loop && setup_zsh && setup_vim && tmux_plug && dwm_tools && setup_mouse && clean_up 
