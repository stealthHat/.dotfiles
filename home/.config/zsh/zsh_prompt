#!/bin/zsh

autoload -U colors && colors
autoload -Uz vcs_info

precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )

zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:git*+set-message:*' hooks git-untracked git-st git-stash
zstyle ':vcs_info:git*:*' formats "$fg[white]on $fg[blue] %b $fg[red]%u$fg[green]%c%m"

# Show count of untracked changes
function +vi-git-untracked(){
  if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
    git status --porcelain | grep '??' &> /dev/null ; then
    hook_com[staged]+="$fg[red]?"
  fi
}

# Show +N/-N when your local branch is ahead-of or behind remote HEAD.
function +vi-git-st() {
  local ahead behind
  local -a gitstatus

  # Exit early in case the worktree is on a detached HEAD
  git rev-parse ${hook_com[branch]}@{upstream} >/dev/null 2>&1 || return 0

  local -a ahead_and_behind=(
    $(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null)
  )

  ahead=${ahead_and_behind[1]}
  behind=${ahead_and_behind[2]}

  (( $ahead )) && gitstatus+=( "$fg[green]⇡${ahead}" )
  (( $behind )) && gitstatus+=( "$fg[red]⇣${behind}" )

  hook_com[misc]+=${(j:/:)gitstatus}
}

# Show count of stashed changes
function +vi-git-stash() {
  local -a stashes

  if [[ -s ${hook_com[base]}/.git/refs/stash ]] ; then
    stashes=$(git stash list 2>/dev/null | wc -l)
    hook_com[misc]+="${fg[yellow]}[${stashes} ]"
  fi
}

PS1='$fg_bold[cyan]%~ $vcs_info_msg_0_ $reset_color'
PS1+=$'\n%(?.%F{green}.%F{red})❯ %f'
